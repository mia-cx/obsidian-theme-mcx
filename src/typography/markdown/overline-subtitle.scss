@use "../fonts";
@use "sass:map";
@use "../spacing";
@use "../scaling";

// TODO margins & padding

.markdown-source-view {
	&.is-live-preview {
		%overline {
			--font-text-theme: #{fonts.$archivo};
			--font-width: 125;
		}
		%subheading {
			--font-text-theme: #{fonts.$kalam};
			--font-weight: 700;
		}

		%overline,
		%subheading {
			padding-inline-start: 0 !important;
			&.cm-active {
				text-indent: 0 !important;
			}
			&:before {
				content: none !important;
			}
		}
	}
	&:not(.is-live-preview) {
		%overline {
			--font-text-theme: #{fonts.$fira-code};
		}
		%subheading {
			--font-text-theme: #{map.get(fonts.$monaspace, radon)};
		}
	}

	%overline {
		padding-top: var(
			--pt,
			0rem
		) !important; // !!! !important is bad, just using it to get past specificity here.
		padding-bottom: var(--pb, 0rem);
		&:has(+ * + %h1) {
			--pt: #{map.get(spacing.$padding, xxl)};
		}
		&:has(+ * + %h2) {
			--pt: #{map.get(spacing.$padding, xl)};
		}
		&:has(+ * + %h3) {
			--pt: #{map.get(spacing.$padding, lg)};
		}
		&:has(+ * + %h4) {
			--pt: #{map.get(spacing.$padding, md)};
		}
		&:has(+ * + %h5) {
			--pt: #{map.get(spacing.$padding, md)};
		}
		&:has(+ * + %h6) {
			--pt: #{map.get(spacing.$padding, sm)};
		}
	}

	%subheading {
		padding-top: var(
			--pt,
			0rem
		) !important; // !!! !important is bad, just using it to get past specificity here.
		padding-bottom: var(--pb, 0rem);
		&:where(%h1 + * + *) {
			--pt: #{map.get(spacing.$padding, md)};
			--pb: #{map.get(spacing.$padding, lg)};
		}
		&:where(%h2 + * + *) {
			--pt: #{map.get(spacing.$padding, md)};
			--pb: #{map.get(spacing.$padding, lg)};
		}
		&:where(%h3 + * + *) {
			--pt: #{map.get(spacing.$padding, sm)};
			--pb: #{map.get(spacing.$padding, md)};
		}
		&:where(%h4 + * + *) {
			--pt: #{map.get(spacing.$padding, sm)};
			--pb: #{map.get(spacing.$padding, md)};
		}
		&:where(%h5 + * + *) {
			--pt: #{map.get(spacing.$padding, sm)};
			--pb: #{map.get(spacing.$padding, md)};
		}
		&:where(%h6 + * + *) {
			--pt: #{map.get(spacing.$padding, sm)};
			--pb: #{map.get(spacing.$padding, sm)};
		}
	}

	&.is-live-preview {
		%empty-line-overline {
			&:not(.cm-active) {
				max-height: 0rem;
			}
		}
		%empty-line-subheading {
			&:not(.cm-active) {
				max-height: 0rem;
			}
		}
	}

	%overline {
		--font-text-size: #{map.get(scaling.$fontSize, overline)};
		font-size: var(--font-text-size);

		--font-text: var(--font-text-override), var(--font-text-theme),
			var(--font-default);
		--font-weight: 100;
		font-family: var(--font-text);
		text-transform: uppercase;

		padding-top: var(--p-spacing, 0rem);
		--p-spacing: 0rem;
	}

	%heading-with-overline {
		--p-spacing: #{map.get(spacing.$padding, xxs)};
	}

	%subheading {
		--font-text-size: #{map.get(scaling.$fontSize, subheading)};
		font-size: var(--font-text-size);

		--font-text: var(--font-text-override), var(--font-text-theme),
			var(--font-default);
		font-family: var(--font-text);
		text-transform: uppercase;

		padding-top: map.get(spacing.$padding, xxs);
	}

	// TODO get rid of caret (>) and the blue line at the start of the overline & subheading blockquotes

	%heading-with-subheading {
	}
}

.markdown-reading-view {
	%overline {
		color: lime;
	}
	%empty-line-overline {
		background-color: lime;
	}
	%heading-with-overline {
		color: lime;
	}
	%subheading {
		color: cyan;
	}
	%empty-line-subheading {
		background-color: cyan;
	}
	%heading-with-subheading {
		color: cyan;
	}
}

.cm-line {
	> br:only-child {
		// br that is an only child inside of a .cm-line
		@extend %br-in-empty-line !optional;
	}

	&:has(> br:only-child) {
		// .cm-line with only one child that is of type br
		@extend %empty-line !optional;

		+ %blockquote-top-level {
			// first line of a top-level blockquote
			&:has(+ %br-in-empty-line) {
				// single line top-level blockquote
				&:has(+ * + %heading) {
					// overline: single line top-level blockquote followed by a heading
					@extend %overline !optional;
				}
				+ *:has(+ %heading) {
					// empty line between an overline and a heading
					@extend %empty-line-overline !optional;
				}
				+ * + %heading {
					// single line top-level blockquote followed by a heading
					@extend %heading-with-overline
							!optional;
				}
			}
		}
	}

	&.HyperMD-quote {
		// .cm-line that is a blockquote
		&.HyperMD-quote-1 {
			// top-level blockquote
			@extend %blockquote-top-level !optional;
			&:has(+ %br-in-empty-line) {
				// last line of a top-level blockquote
				&:first-child {
					&:has(+ * + %heading) {
						// overline: single line top-level blockquote followed by a heading
						@extend %overline !optional;
					}
					+ *:has(+ %heading) {
						// empty line between an overline and a heading
						@extend %empty-line-overline
								!optional;
					}
					+ * + %heading {
						// single line top-level blockquote followed by a heading
						@extend %heading-with-overline
								!optional;
					}
				}
			}
		}
	}

	&.HyperMD-header {
		// .cm-line that is a heading
		@extend %heading !optional;

		&:has(+ %br-in-empty-line) {
			// empty line after a heading
			&:has(+ * + %blockquote-top-level) {
				// heading followed by a top-level blockquote
				&:has(
						+ *
							+ %blockquote-top-level
							+ .cm-line
							> br:only-child
					) {
					// heading followed by a top-level blockquote followed by a empty line
					@extend %heading-with-subheading
							!optional;
				}
			}
		}

		+ %empty-line {
			// empty line after a heading
			&:has(+ %blockquote-top-level) {
				&:has(+ * + .cm-line > br:only-child) {
					// empty line after a heading followed by a top-level blockquote
					@extend %empty-line-subheading
							!optional;
				}
			}
			+ %blockquote-top-level {
				// top-level blockquote after a heading
				&:has(+ %br-in-empty-line) {
					// empty line after a heading followed by a top-level blockquote
					@extend %subheading !optional;
				}
			}
		}

		&.HyperMD-header-1 {
			// h1
			@extend %h1 !optional;
		}
		&.HyperMD-header-2 {
			// h2
			@extend %h2 !optional;
		}
		&.HyperMD-header-3 {
			// h3
			@extend %h3 !optional;
		}
		&.HyperMD-header-4 {
			// h4
			@extend %h4 !optional;
		}
		&.HyperMD-header-5 {
			// h5
			@extend %h5 !optional;
		}
		&.HyperMD-header-6 {
			// h6
			@extend %h6 !optional;
		}
	}
}

// TODO live preview selectors
